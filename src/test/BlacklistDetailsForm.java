/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * BlacklistDetailsForm.java
 *
 * Created on Jan 23, 2012, 8:39:58 PM
 */
package test;

import java.awt.event.KeyEvent;
import javax.swing.ImageIcon;

/**
 *
 * @author Administrator
 */
public class BlacklistDetailsForm extends javax.swing.JFrame {

    /**
     * Creates new form BlacklistDetailsForm
     */
    String currenttimestamp = TimeDate.time.timestampToFullDate(AbstractPerson.ab.currentTimeStamp());
    String action = "";

    public BlacklistDetailsForm() {
        initComponents();
        setLocationRelativeTo(null);
        blackAddedBy.setText(Session.s1.sessionUser);
    }

    public BlacklistDetailsForm(String type) {

        action = type;
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox();
        photoPanel = new javax.swing.JPanel();
        pic = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        blackId = new javax.swing.JTextField();
        cancel = new javax.swing.JButton();
        submit = new javax.swing.JButton();
        blackAddedBy = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        blackDuration = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        days = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        blackReason = new javax.swing.JTextArea();
        reset = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(": : Black Registration Form : :");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                windowClosed(evt);
            }
        });

        photoPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout photoPanelLayout = new javax.swing.GroupLayout(photoPanel);
        photoPanel.setLayout(photoPanelLayout);
        photoPanelLayout.setHorizontalGroup(
            photoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pic, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
        );
        photoPanelLayout.setVerticalGroup(
            photoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pic, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        blackId.setBackground(new java.awt.Color(255, 255, 225));
        blackId.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        blackId.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        blackId.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                BlacklistDetailsForm.this.focusLost(evt);
            }
        });
        blackId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                blackIdKeyPressed(evt);
            }
        });

        cancel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/32/button_cancel.png"))); // NOI18N
        cancel.setText("cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });
        cancel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cancelKeyPressed(evt);
            }
        });

        submit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        submit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/32/apply.png"))); // NOI18N
        submit.setText("Submit");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });
        submit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                submitKeyPressed(evt);
            }
        });

        blackAddedBy.setBackground(new java.awt.Color(255, 255, 225));
        blackAddedBy.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        blackAddedBy.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        blackAddedBy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blackAddedByActionPerformed(evt);
            }
        });
        blackAddedBy.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                blackAddedByKeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 255));
        jLabel4.setText("Added by:");

        blackDuration.setBackground(new java.awt.Color(255, 255, 225));
        blackDuration.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        blackDuration.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        blackDuration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blackDurationActionPerformed(evt);
            }
        });
        blackDuration.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                blackDurationKeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 255));
        jLabel5.setText("Reason:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 255));
        jLabel2.setText("ID:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 255));
        jLabel3.setText("Duration:");

        days.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        days.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Days", "Hours", "Week", "month" }));
        days.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                daysActionPerformed(evt);
            }
        });

        blackReason.setBackground(new java.awt.Color(255, 255, 225));
        blackReason.setColumns(20);
        blackReason.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        blackReason.setRows(5);
        blackReason.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                blackReasonKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(blackReason);

        reset.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        reset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/32/refresh.png"))); // NOI18N
        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });
        reset.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                resetKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(blackId)
                            .addComponent(blackAddedBy, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(blackDuration)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(days, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1))
                        .addGap(0, 72, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                        .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(blackId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(blackDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(days, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(blackAddedBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(submit)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(reset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cancel)))
                .addContainerGap())
        );

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/64/Blacklist.png"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 102));
        jLabel1.setText("Blacklist Registration Form");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(photoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel1)))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(photoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
private void submit(){    
        if (putBlacklistInfo()) {
            if (action.equalsIgnoreCase("edit")) {
                BlacklistDetails blDetail = new BlacklistDetails("edit");
                blDetail.setVisible(true);
            }
            if (action.equalsIgnoreCase("delete")) {
                BlacklistDetails blDetail = new BlacklistDetails("delete");
                blDetail.setVisible(true);
            } else if (action.equalsIgnoreCase("")) {
                BlacklistDetails blDetail = new BlacklistDetails(1);
                blDetail.setVisible(true);
            }
            this.dispose();
        }
}
    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        submit();
}//GEN-LAST:event_submitActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        this.dispose();

}//GEN-LAST:event_cancelActionPerformed

    private void blackAddedByActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blackAddedByActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_blackAddedByActionPerformed

    private void windowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_windowClosed
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_windowClosed

    private void daysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_daysActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_daysActionPerformed

    private void blackDurationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blackDurationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_blackDurationActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        resetItems();        // TODO add your handling code here:
    }//GEN-LAST:event_resetActionPerformed
    void keyAction(java.awt.event.KeyEvent evt, String Button) {
        int key = evt.getKeyCode();
        if (key == KeyEvent.VK_ENTER) {
            if (Button.equalsIgnoreCase("cancel")) {
                int i=DialogBox.dialog.confirmDialog("All the details will get lost.. Do you want to cancel ??");
             if(i==0)
             {
                 this.dispose();
             }
             else if(i==1){}
             else if(i==2){}
            } 
            else if (Button.equalsIgnoreCase("submit")) {
                submit();
            }
            else if (Button.equalsIgnoreCase("reset")) {
                resetItems();
            }
            else{
            submit();
            }
        }
        if (key == KeyEvent.VK_ESCAPE) {    
             int i=DialogBox.dialog.confirmDialog("All the details will get lost.. Do you want to cancel ??");
             if(i==0)
             {
                 this.dispose();
             }
             else if(i==1){}
             else if(i==2){}
            }
    }
    private void focusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_focusLost

        
            if (Student.std.ifStudentExists(this.blackId.getText(), "") == true) {
                Student.std.setStudentInfo(this.blackId.getText(),"");
                if (Student.std.image != null) {
                    ImageIcon thumbnailIcon = new ImageIcon(Utilities.util.rescaleImage(Student.std.image, this.photoPanel.getWidth(), this.photoPanel.getHeight()));
                    this.pic.setIcon(thumbnailIcon);
                    Blacklist.blk.image = Student.std.image;
                }
            }else if (Guest.gst.ifGuestExists(this.blackId.getText(), "") == true) {
                Guest.gst.setGuestInfo(this.blackId.getText(),"");
                if (Guest.gst.image != null) {
                    ImageIcon thumbnailIcon = new ImageIcon(Utilities.util.rescaleImage(Guest.gst.image, this.photoPanel.getWidth(), this.photoPanel.getHeight()));
                    Blacklist.blk.image = Guest.gst.image;
                    this.pic.setIcon(thumbnailIcon);
                }
            }else if (Faculty.fct.ifFacultyExists(this.blackId.getText(), "") == true) {
                 Faculty.fct.setFacultyInfo(this.blackId.getText(),"");
                if (Faculty.fct.image != null) {
                    ImageIcon thumbnailIcon = new ImageIcon(Utilities.util.rescaleImage(Faculty.fct.image, this.photoPanel.getWidth(), this.photoPanel.getHeight()));
                    this.pic.setIcon(thumbnailIcon);
                    Blacklist.blk.image = Faculty.fct.image;
                }
            }
            //else DialogBox.dialog.errorDialog("Such person doesn't exist");
        
            /*else {
                DialogBox.dialog.errorDialog("Please enter correct ID");
            }*/
    }//GEN-LAST:event_focusLost

    private void blackIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_blackIdKeyPressed

         int key = evt.getKeyCode();
        if (key == KeyEvent.VK_ENTER) {   
        blackDuration.requestFocus();
        }else{
        keyAction(evt,"submit");
        }// TODO add your handling code here:
    }//GEN-LAST:event_blackIdKeyPressed

    private void blackDurationKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_blackDurationKeyPressed

        int key = evt.getKeyCode();
        if (key == KeyEvent.VK_ENTER) {   
        blackAddedBy.requestFocus();
        }else{
        keyAction(evt,"submit");
        }// TODO add your handling code here:
    }//GEN-LAST:event_blackDurationKeyPressed

    private void blackAddedByKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_blackAddedByKeyPressed

        int key = evt.getKeyCode();
        if (key == KeyEvent.VK_ENTER) {   
        blackReason.requestFocus();
        }else{
        keyAction(evt,"submit");
        }// TODO add your handling code here:
    }//GEN-LAST:event_blackAddedByKeyPressed

    private void blackReasonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_blackReasonKeyPressed

        int key = evt.getKeyCode();
        if (key == KeyEvent.VK_ENTER) {   
        submit.requestFocus();
        }else{
        keyAction(evt,"submit");
        }// TODO add your handling code here:
    }//GEN-LAST:event_blackReasonKeyPressed

    private void submitKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_submitKeyPressed
        keyAction(evt,"submit");
        // TODO add your handling code here:
    }//GEN-LAST:event_submitKeyPressed

    private void resetKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_resetKeyPressed

        keyAction(evt,"reset");// TODO add your handling code here:
    }//GEN-LAST:event_resetKeyPressed

    private void cancelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cancelKeyPressed

        keyAction(evt,"cancel");// TODO add your handling code here:
    }//GEN-LAST:event_cancelKeyPressed

    boolean putBlacklistInfo() {

        String durationType = (String) days.getSelectedItem();
        if (Validation.val.validateGuestId(this.blackId.getText(), "Id") == true) {
        if (Validation.val.validateBlacklistInfo(this.blackId.getText(), this.blackDuration.getText(), this.blackAddedBy.getText(), this.blackReason.getText()) == true) {

            long tempduration = Long.parseLong(this.blackDuration.getText());
            long duration = 0;
            if (durationType.equalsIgnoreCase("days")) {
                duration = tempduration * (24 * 60 * 60 * 1000);
            } else if (durationType.equalsIgnoreCase("hours")) {
                duration = tempduration * (60 * 60 * 1000);
            } else if (durationType.equalsIgnoreCase("month")) {
                duration = tempduration * (60 * 60 * 1000);
            } else if (durationType.equalsIgnoreCase("week")) {
                duration = tempduration * (7 * 24 * 60 * 60 * 1000);
            }
            Blacklist.blk.durationtype = durationType;
            Blacklist.blk.id = this.blackId.getText();
            Blacklist.blk.duration = duration;
            Blacklist.blk.reason = this.blackReason.getText();
            if (!action.equalsIgnoreCase("edit")) {
                Blacklist.blk.blktimestamp = currenttimestamp;
                Blacklist.blk.addedby = Session.s1.sessionUser;
            }

            return true;
        } return false;
        }else {
            return false;
        }
    }

    void resetItems() {
        //enableItems();        
        this.blackId.setText("");
        this.blackDuration.setText("");
        //   this.blackAddedBy.setText("");
        this.blackReason.setText("");
        this.days.setSelectedIndex(0);
    }

    void getPrevious() {
        long tempduration = 0;
        if (Blacklist.blk.durationtype.equalsIgnoreCase("days")) {
            tempduration = Blacklist.blk.duration / (24 * 60 * 60 * 1000);
        } else if (Blacklist.blk.durationtype.equalsIgnoreCase("hours")) {
            tempduration = Blacklist.blk.duration / (60 * 60 * 1000);
        } else if (Blacklist.blk.durationtype.equalsIgnoreCase("month")) {
            tempduration = Blacklist.blk.duration / (60 * 60 * 1000);
        } else if (Blacklist.blk.durationtype.equalsIgnoreCase("week")) {
            tempduration = Blacklist.blk.duration / (7 * 24 * 60 * 60 * 1000);
        }

        this.blackId.setText(Blacklist.blk.id);
        this.blackDuration.setText(((Long) tempduration).toString());
        this.blackAddedBy.setText(Blacklist.blk.addedby);
        this.days.setSelectedItem(Blacklist.blk.durationtype);
        this.blackReason.setText(Blacklist.blk.reason);
    }
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField blackAddedBy;
    private javax.swing.JTextField blackDuration;
    private javax.swing.JTextField blackId;
    private javax.swing.JTextArea blackReason;
    private javax.swing.JButton cancel;
    private javax.swing.JComboBox days;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel photoPanel;
    private javax.swing.JLabel pic;
    private javax.swing.JButton reset;
    private javax.swing.JButton submit;
    // End of variables declaration//GEN-END:variables
}
