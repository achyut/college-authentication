/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package test;

import java.awt.event.KeyEvent;

/**
 *
 * @author APELY
 */
public class ComputerDetailsForm extends javax.swing.JFrame {
    String action = "";
    /**
     * Creates new form ComputerListDetailsForm
     */
    public ComputerDetailsForm() {
       initComponents();
        setLocationRelativeTo(null);
    }
    public ComputerDetailsForm(String type)
    {
        action = type;
    initComponents();
    setLocationRelativeTo(null);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        compid = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cancel = new javax.swing.JButton();
        submit = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        macadd = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        processor = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        harddisk = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        ram = new javax.swing.JTextField();
        cd = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        reset = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        brand = new javax.swing.JTextField();
        labno = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        computertype = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(": : Computer Registration : :");
        setResizable(false);

        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        compid.setBackground(new java.awt.Color(255, 255, 225));
        compid.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        compid.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        compid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                compidKeyPressed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 255));
        jLabel8.setText("Cd:");

        cancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/32/button_cancel.png"))); // NOI18N
        cancel.setText("cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });
        cancel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cancelKeyPressed(evt);
            }
        });

        submit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/32/apply.png"))); // NOI18N
        submit.setText("Submit");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });
        submit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                submitKeyPressed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 255));
        jLabel6.setText("Hard Disk:");

        jLabel7.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 255));
        jLabel7.setText("RAM:");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 255));
        jLabel4.setText("Lab No:");

        macadd.setBackground(new java.awt.Color(255, 255, 225));
        macadd.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        macadd.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        macadd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                macaddKeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 255));
        jLabel5.setText("Processor:");

        processor.setBackground(new java.awt.Color(255, 255, 225));
        processor.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        processor.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        processor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                processorKeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 255));
        jLabel2.setText("Computer ID:");

        harddisk.setBackground(new java.awt.Color(255, 255, 225));
        harddisk.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        harddisk.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        harddisk.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                harddiskKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 255));
        jLabel3.setText("Mac Address:");

        ram.setBackground(new java.awt.Color(255, 255, 225));
        ram.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        ram.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        ram.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ramKeyPressed(evt);
            }
        });

        cd.setBackground(new java.awt.Color(255, 255, 225));
        cd.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        cd.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        cd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cdActionPerformed(evt);
            }
        });
        cd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cdKeyPressed(evt);
            }
        });

        reset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/32/refresh.png"))); // NOI18N
        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });
        reset.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                resetKeyPressed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 255));
        jLabel9.setText("Brand:");

        brand.setBackground(new java.awt.Color(255, 255, 225));
        brand.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        brand.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        brand.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                brandKeyPressed(evt);
            }
        });

        labno.setBackground(new java.awt.Color(255, 255, 225));
        labno.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        labno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Lab 1", "Lab 2", "Lab 3", "Lab 4" }));
        labno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                labnoKeyPressed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 255));
        jLabel10.setText("Computer type:");

        computertype.setBackground(new java.awt.Color(255, 255, 225));
        computertype.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        computertype.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Admin", "clerk", "user" }));
        computertype.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                computertypeKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(submit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(32, 32, 32))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(computertype, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))
                                .addGap(50, 50, 50)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(harddisk)
                                    .addComponent(processor)
                                    .addComponent(ram, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(cd, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(brand)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel4))
                                        .addGap(18, 18, 18)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(macadd, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(compid, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labno, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(47, 47, 47))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(compid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(macadd, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(labno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(computertype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(processor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(harddisk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ram, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(brand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(submit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 102));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/48/lab.png"))); // NOI18N
        jLabel1.setText("Computer Registration Form");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelActionPerformed

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
    submit();
    
    }//GEN-LAST:event_submitActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        resetItems();        // TODO add your handling code here:
    }//GEN-LAST:event_resetActionPerformed

    private void cdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cdActionPerformed

    private void compidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_compidKeyPressed

         int key = evt.getKeyCode();
        if (key == KeyEvent.VK_ENTER) {   
        macadd.requestFocus();
        }
        else{
        keyAction(evt,"submit");
        }// TODO add your handling code here:
    }//GEN-LAST:event_compidKeyPressed

    private void macaddKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_macaddKeyPressed
 int key = evt.getKeyCode();
        if (key == KeyEvent.VK_ENTER) {   
        labno.requestFocus();
        }
        else{
        keyAction(evt,"submit");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_macaddKeyPressed

    private void labnoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_labnoKeyPressed

         int key = evt.getKeyCode();
        if (key == KeyEvent.VK_ENTER) {   
        computertype.requestFocus();
        }
        else{
        keyAction(evt,"submit");
        }// TODO add your handling code here:
    }//GEN-LAST:event_labnoKeyPressed

    private void computertypeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_computertypeKeyPressed

         int key = evt.getKeyCode();
        if (key == KeyEvent.VK_ENTER) {   
        processor.requestFocus();
        }
        else{
        keyAction(evt,"submit");
        }// TODO add your handling code here:
    }//GEN-LAST:event_computertypeKeyPressed

    private void processorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_processorKeyPressed

         int key = evt.getKeyCode();
        if (key == KeyEvent.VK_ENTER) {   
        harddisk.requestFocus();
        }
        else{
        keyAction(evt,"submit");
        }// TODO add your handling code here:
    }//GEN-LAST:event_processorKeyPressed

    private void harddiskKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_harddiskKeyPressed

         int key = evt.getKeyCode();
        if (key == KeyEvent.VK_ENTER) {   
        ram.requestFocus();
        }
        else{
        keyAction(evt,"submit");
        }// TODO add your handling code here:
    }//GEN-LAST:event_harddiskKeyPressed

    private void ramKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ramKeyPressed

         int key = evt.getKeyCode();
        if (key == KeyEvent.VK_ENTER) {   
        cd.requestFocus();
        }
        else{
        keyAction(evt,"submit");
        }// TODO add your handling code here:
    }//GEN-LAST:event_ramKeyPressed

    private void cdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cdKeyPressed

         int key = evt.getKeyCode();
        if (key == KeyEvent.VK_ENTER) {   
        brand.requestFocus();
        }
        else{
        keyAction(evt,"submit");
        }// TODO add your handling code here:
    }//GEN-LAST:event_cdKeyPressed

    private void brandKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_brandKeyPressed

         int key = evt.getKeyCode();
        if (key == KeyEvent.VK_ENTER) {   
        submit.requestFocus();
        }
        else{
        keyAction(evt,"submit");
        }// TODO add your handling code here:
    }//GEN-LAST:event_brandKeyPressed

    private void submitKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_submitKeyPressed

        keyAction(evt,"submit");// TODO add your handling code here:
    }//GEN-LAST:event_submitKeyPressed

    private void resetKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_resetKeyPressed

        keyAction(evt, "reset");// TODO add your handling code here:
    }//GEN-LAST:event_resetKeyPressed

    private void cancelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cancelKeyPressed
        keyAction(evt,"cancel");
    }//GEN-LAST:event_cancelKeyPressed
void getPrevious(){
    this.compid.setText(Computer.comp.compid);
    this.macadd.setText(Computer.comp.macadd);
    this.labno.setSelectedItem(Computer.comp.labno);
    this.computertype.setSelectedItem(Computer.comp.computertype);
    this.processor.setText(Computer.comp.processor);
    this.harddisk.setText(Computer.comp.harddisk);
    this.ram.setText(Computer.comp.ram);
    this.cd.setText(Computer.comp.cd);
    this.brand.setText(Computer.comp.brand);
    }
    
    boolean putComputerInfo(){
    if(Validation.val.validateComputerInfo(this.compid.getText(),this.macadd.getText(),this.labno.getSelectedItem().toString(),this.processor.getText(),this.harddisk.getText(),this.ram.getText(),this.cd.getText(),this.brand.getText()) == true){            
       Computer.comp.compid = this.compid.getText();
        Computer.comp.macadd = this.macadd.getText();
        Computer.comp.processor= this.processor.getText();
        Computer.comp.labno= this.labno.getSelectedItem().toString();
        Computer.comp.computertype= this.computertype.getSelectedItem().toString();
        Computer.comp.harddisk = this.harddisk.getText();
        Computer.comp.ram= this.ram.getText();
        Computer.comp.cd=this.cd.getText();
        Computer.comp.brand=this.brand.getText();
        return true;
        }
    else 
        return false;
    }
    void resetItems(){
        //enableItems();        
        this.compid.setText("");
        this.macadd.setText("");
        this.labno.setSelectedIndex(0);
        this.computertype.setSelectedIndex(0);
        this.processor.setText("");
        this.harddisk.setText("");
        this.ram.setText("");
        this.cd.setText("");
        this.brand.setText("");
    }
  
    void submit(){
        if (putComputerInfo()) {
            if (action.equalsIgnoreCase("edit")) {
                ComputerDetails compDetail = new ComputerDetails("edit");
                compDetail.setVisible(true);
            }
            if (action.equalsIgnoreCase("delete")) {
                ComputerDetails compDetail = new ComputerDetails("delete");
                compDetail.setVisible(true);
            } else if (action.equalsIgnoreCase("")) {
                ComputerDetails compDetail = new ComputerDetails(1);
                compDetail.setVisible(true);
            }
            this.dispose();
        }

    }
    void keyAction(java.awt.event.KeyEvent evt, String Button) {
        int key = evt.getKeyCode();
        if (key == KeyEvent.VK_ENTER) {
            if (Button.equalsIgnoreCase("cancel")) {
                int i=DialogBox.dialog.confirmDialog("All the details will get lost.. Do you want to cancel ??");
             if(i==0)
             {
                 this.dispose();
             }
             else if(i==1){}
             else if(i==2){}
            } 
            else if (Button.equalsIgnoreCase("submit")) {
                submit();
            }
            else if (Button.equalsIgnoreCase("reset")) {
                resetItems();
            }
            else{
            submit();
            }
        }
        if (key == KeyEvent.VK_ESCAPE) {    
             int i=DialogBox.dialog.confirmDialog("All the details will get lost.. Do you want to cancel ??");
             if(i==0)
             {
                 this.dispose();
             }
             else if(i==1){}
             else if(i==2){}
            }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField brand;
    private javax.swing.JButton cancel;
    private javax.swing.JTextField cd;
    private javax.swing.JTextField compid;
    private javax.swing.JComboBox computertype;
    private javax.swing.JTextField harddisk;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JComboBox labno;
    private javax.swing.JTextField macadd;
    private javax.swing.JTextField processor;
    private javax.swing.JTextField ram;
    private javax.swing.JButton reset;
    private javax.swing.JButton submit;
    // End of variables declaration//GEN-END:variables
}
